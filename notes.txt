
primitive data types 


	byte	1 byte 8  bits   -128  127 
	short	2 byte 16 bits 
	char	2 byte
	int		4 byte	
	long	8 byte
	float	4 byte 
	double 	8 byte
	boolean 1 bit    true / false
	
	
	class => variable + method 
	object-> access class's property  
	
	instance varible
	local variable
	
	constructor 
	
	static vs non static method 
	
	how to access method and variable using object 
	
	getters and setters 
	
	getters => getName() getAge() getAddress() getGender() 
	
	
	
	1) how to compare two objects?
		override equals()  
	2) can we use instance of ?
	3) what is impact of == on objects?
	4) what it display when we print object? how to override it?
------------------------------------------------------------------------------------
java --> 
		jdk :- java development kit --tools {jre}
			javac -> java compiler  
			java 
		
		
		
		jre :- java runtime enviornment --run  
			-> jvm , classloader , jit , lib 
		 
os -> jre -> pre install 


text editor -> vs code 
ide -> eclipse , intelliej 	


java -> 1 1.1 , 2 1.2 ,....5,6,7........ 8 1.8
								   11 
								   17 		  
								   19	 
---------------------------------------------------------------------------------

terminal -> javac -version , java -version 

--------------------------------------------------------------------

java -> eng HL
   compiler -> compile ->  translate -> HL -> java { computer } 
computer -> binary LL 



.java -> ENG -> HL 

javac -> java compiler -> compile -> .java -> .class 
java -> java execute => run -> .class -> jre 


java is platform/os independant 


------------------------------------------------------------------

.java --> .class


oop-> class + object 

class  : logical , group , generalization 
object : physical , member  , specilization 

Laptop 

	Legion Y520 -> object 
	
Mango 
	KesarMango 
	
	
Men 
	DhirajSir 
Women 	
	Prisha 	
	
-------------------------------------------------------------------------------	


class -> 	blue print --> implementation 


Facebook -> Account -> method -> 
			Payment -> method -> 
		
	class -> properties -> method + variable 
	object -> method and variable use 
-----------------------------------------------------------------------------------	
	
Scanner --> java 

	nextInt()
	nextFloat()
	nextDouble()
	next()
	nextLine()
		 
	object 
-------------------------------------------------------------------------


array is a collection of same type of data type 

int a[]; 
int a[] = new int[5]; 
int a[] = new int[15]; 

	
access array using index 

	int a[] = new int[5]; 
 		a[0] a[1] a[2] a[3] a[4] 

-------------------------------------------------------------------------


1) copy 1d array into another 1d Arra 
	a=>1 2 3 4 5 
 	b=>1 2 3 4 5 
	c=>5 4 3 2 1

 
2) a=> 10 20 30 40 50
   righshift -> 
   a=>50 10 20 30 40     		

3) 10 12  9 34 32 
  sort=>9 10 12 32 34 

4) 10 20 30 20 10 
palindrome array



XXXX => 

	10 10 20 30 40
	i
	            
	     a[i] = a[i-1];        
	 




1) scan print 
2) sum of all elements of 2d 
3) min and max from 2d 
4) sum of all elements of 2d - row wise 
5) transpose => row -> col 
	a=>		1 2 3  
			4 5 6 
			7 8 9 
				
	b=>		1	4	7
			2	5	8
			3	6	9


i 
 j 
	b[j][i] = a[i][j]; 

 
------------------------------------------
String s; //class 

 ---------------------------------------------------------------------------------
inheritance --> feature of oop 
java --> oop -> inheritance 
 
String s1 = new String("royal"); 
String s2 = "royal"; 
String s3 = "Royal"; 

//when you want to store multiple characters  -- r royal
//single character => char data type  


char c = 'x'; 
String st = "student";  //s:0 t:1 u:2 d:3 e:4 n:5 t:6  

System.out.println(st.length()); //how many characters you have 

System.out.println(st.charAt(0)); //s
System.out.println(st.charAt(3)); //d


System.out.println(st.indexOf('d')); //3 
System.out.println(st.indexOf('z')); //-1

String x = "jack";
String y = "jack";
String z = "Jack";

System.out.println(x.equals(y)); //true 
System.out.println(x.equals(z)); //false 

System.out.println(x.equalsIgnoreCase(z)); //true 
 

System.out.println(x.startsWith("james"); //false 
System.out.println(x.endsWith("james"); //false 


System.out.println(x.endsWith("@gmail.com"); //false 






1) Vowels count in a string
2) check credentials of user [ admin@gmail.com , admin123 ] 
3) count digit and uppercase from string

 

inheritance -> re-use ->
	inheritance is the process by which object 
	of one class can access property of another class. 
	 
	extends keyword is used to achieve inheritance 
	
	we have 5 types of inheritance in oop 
	java directly supports 4 types 
	using interface we can support 5th 
 
	class who gives the property is known as parent-super-base  
	class who takes the property is known as child-sub-derived 
	
----------------------------------------------------------------------------	
	
	now create method for scanning variable and printing variable 
	do not make duplicate code for scan and print 
	 
	 void getData(){
	 }
	 void printData(){
	 }
	 
	 
	 we want only two object in main method 
	 we need to create  1 regular typist and 1 casual typist 
	 from regular typist we want to scan all - code name speed salary 
	 from casual typist we want to scan all - code name speed dailyWages 
	 
	 after scaning we need to call print for them  
----------------------------------------------------------------------------	
	 
	sbi
	
	icici
	
	pnb 
	
			saving current fb wid() dep() chkBal() 
			
	
-----------------------------------------------------------------------------


Employee have firstname,lastname,username,password,basic salary,salary.

Employee can access any data using login in application.

Payroll system will calculate salary of employee. 

Our system has two types of employee part time employee and full time employee. 

Part time employee get basic salary and 10% bonus of basic salary.

Full time employees get a 10% bonus , 7% HRA , 5% uniformallow. , 8% leave bonus.
our payroll system will calculate salary using above data. 
	
class ? 
variable ?
method ?

-----------------------------------------------------------------------------------


collection -> 



						List --> interface 
ArrayList 							Vector  

		add()
		remove()
		iterate 
		size() 
		
array -> size : fix  		
	0th 1st 2nd 

----------------------------------------------------------------------------------------------------

Student.java
     id,name,year,grade
Course.java 
    cname,capacity 


StudentCourse.java 
     main -> 
	How many Course You want to create ? 
 	4 
  
        Enter CourserName and Capacity : 
        C 
	20

        Enter CourserName and Capacity : 
        C++ 
	20

	Enter CourserName and Capacity : 
        java 
	20
        
	Enter CourserName and Capacity : 
        C# 
	20
   
     How Many Students you want to add? 
       3 
      enter id , enter name , enter year , enter grade 
      how many course you want to enroll? 
      3 
  
	enter course name : 
	C   [ course name present ? capcity ? => FALSE | TRUE ] 

	enter course name : 
	C++   [ course name present ? capcity ? => FALSE | TRUE ] 

	enter course name : 
	.NET   [ course name present ? capcity ? => FALSE | TRUE ] 


	Print All Student Detail 
        id name year grade | course Name 
    


--------------------------------------------------------------------------

ExpensManager -: 


expenseMaster.txt 

tejas	tejas@gmail.com		dmart 		grocery 	5000
ram		ram@gmail.com		bigBazar	grocery		5000
tejas	tejas@gmail.com		milkbasket	dairy		2500
laxman	lax@gmail.com		sanjivani	medical		15000
ram		ram@gmail.com		dmart		grocery		3000
ram		ram@gmail.com		milkbasket	dairy		6000

using above file calculate expenses of the user category wise 

tejas		
grocery:5000
dairy:2500 
medical:0

ram:
grocery:8000
dairy:6000
medical:0

laxman:
medical:15000
------------------------------------------------------------










	
	
